# Generated by Django 5.1.7 on 2025-04-20 01:17

import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True
    dependencies = [
        ('coreempresas', '0004_alter_empresaparam_id_empresa_and_more'),
        ('operadores', '0008_alter_operadorbodega_id_empresa_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='BodegaTipo',
            fields=[
                ('id', models.AutoField(db_column='id_bodega_tipo', primary_key=True, serialize=False)),
                ('tipo_bodega', models.CharField(default='', max_length=50, unique=True)),
            ],
            options={
                'verbose_name': 'Tipo de Bodega',
                'db_table': '"dm_logistica"."bodega_tipo"',
            },
        ),
        migrations.CreateModel(
            name='EstadoControlInventario',
            fields=[
                ('id', models.AutoField(db_column='id_estado_control_inventario', primary_key=True, serialize=False)),
                ('detalle', models.CharField(blank=True, max_length=50, null=True)),
            ],
            options={
                'verbose_name': 'Estado Control de Inventario',
                'verbose_name_plural': 'Estados Control de Inventario',
                'db_table': '"dm_logistica"."estado_control_inventario"',
            },
        ),
        migrations.CreateModel(
            name='EstadoDetalleControlInventario',
            fields=[
                ('id', models.AutoField(db_column='id_estado_detalle_control_inventario', primary_key=True, serialize=False)),
                ('descripcion', models.CharField(blank=True, max_length=45, null=True)),
                ('boton', models.SmallIntegerField(blank=True, null=True)),
                ('dboton', models.CharField(blank=True, max_length=15, null=True)),
                ('icon', models.CharField(blank=True, max_length=20, null=True)),
            ],
            options={
                'verbose_name': 'Estado Detalle de Control de Inventario',
                'verbose_name_plural': 'Estados Detalle de Control de Inventario',
                'db_table': '"dm_logistica"."estado_detalle_control_inventario"',
            },
        ),
        migrations.CreateModel(
            name='EstadoOrdenCompra',
            fields=[
                ('id', models.AutoField(db_column='id_estado_orden_compra', primary_key=True, serialize=False)),
                ('descripcion', models.CharField(max_length=100)),
            ],
            options={
                'verbose_name': 'Estado Orden Compra',
                'verbose_name_plural': 'Estados Orden Compra',
                'db_table': '"dm_logistica"."estado_orden_compra"',
            },
        ),
        migrations.CreateModel(
            name='EstadoProducto',
            fields=[
                ('id', models.AutoField(db_column='id_estado_producto', primary_key=True, serialize=False)),
                ('estado_producto', models.CharField(max_length=50)),
            ],
            options={
                'verbose_name': 'Estado de Producto',
                'verbose_name_plural': 'Estados de Producto',
                'db_table': '"dm_logistica"."estado_producto"',
            },
        ),
        migrations.CreateModel(
            name='EstadoSolicitudCompra',
            fields=[
                ('id', models.AutoField(db_column='id_estado_solicitud_compra', primary_key=True, serialize=False)),
                ('descripcion_solicitud_compra', models.CharField(max_length=100)),
            ],
            options={
                'verbose_name': 'Estado Solicitud de Compra',
                'verbose_name_plural': 'Estados Solicitud de Compra',
                'db_table': '"dm_logistica"."estado_solicitud_compra"',
            },
        ),
        migrations.CreateModel(
            name='IdentificadorSerie',
            fields=[
                ('id', models.AutoField(db_column='id_identificador_serie', primary_key=True, serialize=False)),
                ('nombre_serie', models.CharField(max_length=45)),
                ('estado_serie', models.IntegerField(default=1)),
            ],
            options={
                'verbose_name': 'Identificador de Serie',
                'verbose_name_plural': 'Identificadores de Serie',
                'db_table': '"dm_logistica"."identificador_serie"',
            },
        ),
        migrations.CreateModel(
            name='TipoControlInventario',
            fields=[
                ('id', models.AutoField(db_column='id_tipo_control_inventario', primary_key=True, serialize=False)),
                ('detalle', models.CharField(blank=True, max_length=50, null=True)),
            ],
            options={
                'verbose_name': 'Tipo de Control de Inventario',
                'verbose_name_plural': 'Tipos de Control de Inventario',
                'db_table': '"dm_logistica"."tipo_control_inventario"',
            },
        ),
        migrations.CreateModel(
            name='TipoSolicitud',
            fields=[
                ('id', models.AutoField(db_column='id_tipo_solicitud', primary_key=True, serialize=False)),
                ('descripcion', models.CharField(blank=True, max_length=30, null=True)),
            ],
            options={
                'verbose_name': 'Tipo de Solicitud',
                'verbose_name_plural': 'Tipos de Solicitud',
                'db_table': '"dm_logistica"."tipo_solicitud"',
            },
        ),
        migrations.CreateModel(
            name='UnidadMedida',
            fields=[
                ('id', models.AutoField(db_column='id_unidad_medida', primary_key=True, serialize=False)),
                ('nombre_unidad_medida', models.CharField(blank=True, max_length=30, null=True)),
            ],
            options={
                'verbose_name': 'Unidad de Medida',
                'verbose_name_plural': 'Unidades de Medida',
                'db_table': '"dm_logistica"."unidad_medida"',
            },
        ),
        migrations.CreateModel(
            name='Atributo',
            fields=[
                ('id', models.AutoField(db_column='id_atributo', primary_key=True, serialize=False)),
                ('id_modelo_producto', models.IntegerField(default=0)),
                ('nombre_atributo', models.CharField(max_length=100)),
                ('id_empresa', models.ForeignKey(blank=True, db_column='id_empresa', null=True, on_delete=django.db.models.deletion.RESTRICT, to='coreempresas.empresa')),
            ],
            options={
                'verbose_name': 'Atributo',
                'verbose_name_plural': 'Atributos',
                'db_table': '"dm_logistica"."atributo"',
            },
        ),
        migrations.CreateModel(
            name='Bodega',
            fields=[
                ('id', models.AutoField(db_column='id_bodega', primary_key=True, serialize=False)),
                ('estado_bodega', models.PositiveIntegerField(default=0)),
                ('nombre_bodega', models.CharField(max_length=100)),
                ('id_empresa', models.ForeignKey(db_column='id_empresa', default=0, on_delete=django.db.models.deletion.RESTRICT, to='coreempresas.empresa')),
                ('id_bodega_tipo', models.ForeignKey(db_column='id_bodega_tipo', on_delete=django.db.models.deletion.RESTRICT, related_name='bodega', to='dm_logistica.bodegatipo')),
            ],
            options={
                'verbose_name': 'Bodega',
                'verbose_name_plural': 'Bodegas',
                'db_table': '"dm_logistica"."bodega"',
            },
        ),
        migrations.CreateModel(
            name='BodegaStock',
            fields=[
                ('id', models.AutoField(db_column='id_bodega_stock', primary_key=True, serialize=False)),
                ('id_modelo_producto', models.IntegerField()),
                ('stock_critico', models.IntegerField(blank=True, null=True)),
                ('porc_alarma', models.IntegerField(blank=True, null=True)),
                ('alarma', models.SmallIntegerField(blank=True, null=True)),
                ('id_bodega', models.ForeignKey(db_column='id_bodega', on_delete=django.db.models.deletion.RESTRICT, related_name='bodega_stock', to='dm_logistica.bodega')),
                ('id_empresa', models.ForeignKey(db_column='id_empresa', default=0, on_delete=django.db.models.deletion.RESTRICT, to='coreempresas.empresa')),
                ('id_grupo', models.ForeignKey(db_column='id_grupo', on_delete=django.db.models.deletion.RESTRICT, related_name='bodega_stock', to='coreempresas.grupo')),
            ],
            options={
                'verbose_name': 'Stock en Bodega',
                'verbose_name_plural': 'Stocks en Bodega',
                'db_table': '"dm_logistica"."bodega_stock"',
            },
        ),
        migrations.CreateModel(
            name='ControlInventario',
            fields=[
                ('id', models.AutoField(db_column='id_control_inventario', primary_key=True, serialize=False)),
                ('fecha', models.DateTimeField(blank=True, null=True)),
                ('fecha_termino', models.DateTimeField(blank=True, null=True)),
                ('observaciones', models.TextField(blank=True, null=True)),
                ('id_bodega', models.ForeignKey(db_column='id_bodega', on_delete=django.db.models.deletion.RESTRICT, related_name='control_inventario', to='dm_logistica.bodega')),
                ('id_empresa', models.ForeignKey(blank=True, db_column='id_empresa', null=True, on_delete=django.db.models.deletion.RESTRICT, to='coreempresas.empresa')),
                ('id_operador', models.ForeignKey(db_column='id_operador', null=True, on_delete=django.db.models.deletion.RESTRICT, related_name='control_inventario', to='operadores.operador')),
                ('id_estado_control_inventario', models.ForeignKey(db_column='id_estado_control_inventario', null=True, on_delete=django.db.models.deletion.RESTRICT, related_name='control_inventario', to='dm_logistica.estadocontrolinventario')),
                ('id_tipo_control_inventario', models.ForeignKey(db_column='id_tipo_control', null=True, on_delete=django.db.models.deletion.RESTRICT, related_name='control_inventario', to='dm_logistica.tipocontrolinventario')),
            ],
            options={
                'verbose_name': 'Control de Inventario',
                'verbose_name_plural': 'Controles de Inventario',
                'db_table': '"dm_logistica"."control_inventario"',
            },
        ),
        migrations.CreateModel(
            name='Cotizacion',
            fields=[
                ('id', models.AutoField(db_column='id_cotizacion', primary_key=True, serialize=False)),
                ('fecha_cotizacion', models.DateTimeField(default=django.utils.timezone.now)),
                ('total', models.FloatField(blank=True, null=True)),
                ('validez_cotizacion', models.IntegerField(blank=True, null=True)),
                ('archivo', models.CharField(blank=True, max_length=256, null=True)),
                ('estado_cotizacion', models.IntegerField(default=0)),
                ('estado_detalle', models.SmallIntegerField(default=0)),
                ('iva', models.SmallIntegerField(blank=True, null=True)),
                ('folio', models.CharField(blank=True, max_length=64, null=True)),
                ('id_tipo_moneda', models.IntegerField(blank=True, null=True)),
                ('id_empresa', models.ForeignKey(blank=True, db_column='id_empresa', null=True, on_delete=django.db.models.deletion.RESTRICT, to='coreempresas.empresa')),
                ('id_operador', models.ForeignKey(blank=True, db_column='id_operador', null=True, on_delete=django.db.models.deletion.RESTRICT, to='operadores.operador')),
            ],
            options={
                'db_table': '"dm_logistica"."cotizacion"',
            },
        ),
        migrations.CreateModel(
            name='Giro',
            fields=[
                ('id', models.AutoField(db_column='id_giro', primary_key=True, serialize=False)),
                ('descrip_giro', models.CharField(max_length=250)),
                ('codigo_sii', models.CharField(max_length=10)),
                ('id_empresa', models.ForeignKey(blank=True, db_column='id_empresa', null=True, on_delete=django.db.models.deletion.RESTRICT, related_name='giros_logistica', to='coreempresas.empresa')),
            ],
            options={
                'verbose_name': 'Giro',
                'verbose_name_plural': 'Giros',
                'db_table': '"dm_logistica"."giro"',
            },
        ),
        migrations.CreateModel(
            name='MarcaProducto',
            fields=[
                ('id', models.AutoField(db_column='id_marca_producto', primary_key=True, serialize=False)),
                ('marca_producto', models.CharField(max_length=50)),
                ('estado', models.IntegerField(default=1)),
                ('id_empresa', models.ForeignKey(blank=True, db_column='id_empresa', null=True, on_delete=django.db.models.deletion.RESTRICT, to='coreempresas.empresa')),
            ],
            options={
                'verbose_name': 'Marca de Producto',
                'verbose_name_plural': 'Marcas de Producto',
                'db_table': '"dm_logistica"."marca_producto"',
            },
        ),
        migrations.CreateModel(
            name='ModeloProducto',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('id_modelo_producto', models.IntegerField(default=0, unique=True)),
                ('codigo_interno', models.CharField(blank=True, max_length=50, null=True)),
                ('fccid', models.CharField(blank=True, max_length=50, null=True)),
                ('sku', models.CharField(blank=True, max_length=255, null=True)),
                ('sku_codigo', models.CharField(blank=True, max_length=255, null=True)),
                ('nombre_modelo', models.CharField(max_length=100)),
                ('descripcion', models.TextField(blank=True, null=True)),
                ('imagen', models.CharField(blank=True, max_length=200, null=True)),
                ('estado', models.IntegerField(default=1)),
                ('numero_parte', models.CharField(max_length=100)),
                ('producto_seriado', models.SmallIntegerField(default=1)),
                ('nombre_comercial', models.CharField(blank=True, max_length=255, null=True)),
                ('nombre_tecnico', models.CharField(blank=True, max_length=255, null=True)),
                ('so', models.CharField(blank=True, max_length=100, null=True)),
                ('vso', models.CharField(blank=True, max_length=100, null=True)),
                ('version_hw', models.CharField(blank=True, max_length=100, null=True)),
                ('vspc', models.CharField(blank=True, max_length=100, null=True)),
                ('vspf', models.CharField(blank=True, max_length=100, null=True)),
                ('fabricante', models.CharField(blank=True, max_length=255, null=True)),
                ('ubicacion', models.CharField(blank=True, max_length=255, null=True)),
                ('despacho_express', models.SmallIntegerField(default=0)),
                ('rebaja_consumo', models.IntegerField(default=0)),
                ('dias_rebaja_consumo', models.IntegerField(blank=True, null=True)),
                ('orden_solicitud_despacho', models.IntegerField(blank=True, null=True)),
                ('id_empresa', models.ForeignKey(blank=True, db_column='id_empresa', null=True, on_delete=django.db.models.deletion.RESTRICT, to='coreempresas.empresa')),
                ('id_identificador_serie', models.ForeignKey(db_column='id_identificador_serie', on_delete=django.db.models.deletion.RESTRICT, related_name='modelos', to='dm_logistica.identificadorserie')),
            ],
            options={
                'verbose_name': 'Modelo de Producto',
                'verbose_name_plural': 'Modelos de Producto',
                'db_table': '"dm_logistica"."modelo_producto"',
            },
        ),
        migrations.CreateModel(
            name='ModeloProductoValores',
            fields=[
                ('id', models.AutoField(db_column='id_modelo_producto_valor', primary_key=True, serialize=False)),
                ('id_modelo_producto', models.IntegerField(default=0)),
                ('valor_cliente', models.IntegerField(blank=True, null=True)),
                ('valor_publico', models.IntegerField(blank=True, null=True)),
                ('margen', models.IntegerField(blank=True, null=True)),
                ('id_empresa', models.ForeignKey(blank=True, db_column='id_empresa', null=True, on_delete=django.db.models.deletion.RESTRICT, to='coreempresas.empresa')),
            ],
            options={
                'verbose_name': 'Valor de Modelo de Producto',
                'verbose_name_plural': 'Valores de Modelos de Producto',
                'db_table': '"dm_logistica"."modelo_producto_valores"',
            },
        ),
        migrations.CreateModel(
            name='Movimiento',
            fields=[
                ('id', models.AutoField(db_column='id_movimiento', primary_key=True, serialize=False)),
                ('folio', models.CharField(blank=True, max_length=9, null=True)),
                ('operador_emision', models.CharField(blank=True, max_length=50, null=True)),
                ('operador_destino', models.CharField(blank=True, default='', max_length=50)),
                ('observacion', models.TextField(blank=True, null=True)),
                ('fecha_registro', models.DateTimeField(auto_now_add=True)),
                ('tipo_movimiento', models.CharField(default='MOVIMIENTO', max_length=50)),
                ('id_bodega_origen', models.IntegerField()),
                ('id_despachador', models.IntegerField(default=0)),
                ('id_receptor', models.IntegerField(default=0)),
                ('id_punto_venta', models.IntegerField(default=0)),
                ('pdf', models.CharField(blank=True, max_length=255, null=True)),
                ('folio_comprobante', models.CharField(default='0', max_length=32)),
                ('fecha_actualizacion', models.DateTimeField(blank=True, null=True)),
                ('id_requerimiento', models.IntegerField(blank=True, null=True)),
                ('id_bodega', models.ForeignKey(db_column='id_bodega', on_delete=django.db.models.deletion.RESTRICT, related_name='movimientos', to='dm_logistica.bodega')),
                ('id_empresa', models.ForeignKey(blank=True, db_column='id_empresa', null=True, on_delete=django.db.models.deletion.RESTRICT, to='coreempresas.empresa')),
            ],
            options={
                'verbose_name': 'Movimiento',
                'verbose_name_plural': 'Movimientos',
                'db_table': '"dm_logistica"."movimiento"',
            },
        ),
        migrations.CreateModel(
            name='OrdenCompra',
            fields=[
                ('id', models.AutoField(db_column='id_orden_compra', primary_key=True, serialize=False)),
                ('id_solicitante', models.CharField(blank=True, max_length=50, null=True)),
                ('folio', models.CharField(blank=True, max_length=30, null=True)),
                ('fecha', models.DateTimeField(default=django.utils.timezone.now)),
                ('neto', models.FloatField(blank=True, null=True)),
                ('iva', models.FloatField(blank=True, null=True)),
                ('monto_total', models.FloatField(blank=True, null=True)),
                ('observacion', models.TextField(blank=True, null=True)),
                ('fecha_entrega', models.DateTimeField(blank=True, null=True)),
                ('id_aprobador', models.CharField(blank=True, max_length=50, null=True)),
                ('archivo', models.CharField(blank=True, max_length=256, null=True)),
                ('notas_adicionales', models.TextField(blank=True, null=True)),
                ('id_requerimiento', models.IntegerField(blank=True, null=True)),
                ('id_tipo_moneda', models.IntegerField(blank=True, null=True)),
                ('operador_anula', models.CharField(blank=True, max_length=50, null=True)),
                ('fecha_anula', models.DateTimeField(blank=True, null=True)),
                ('motivo_anula', models.TextField(blank=True, null=True)),
                ('desviacion', models.CharField(default='NO', max_length=2)),
                ('id_cotizacion', models.ForeignKey(db_column='id_cotizacion', on_delete=django.db.models.deletion.RESTRICT, related_name='orden_compra', to='dm_logistica.cotizacion')),
                ('id_empresa', models.ForeignKey(db_column='id_empresa', null=True, on_delete=django.db.models.deletion.RESTRICT, to='coreempresas.empresa')),
                ('id_estado_orden_compra', models.ForeignKey(db_column='id_estado_or_compra', on_delete=django.db.models.deletion.RESTRICT, related_name='orden_compra', to='dm_logistica.estadoordencompra')),
                ('id_operador', models.ForeignKey(blank=True, db_column='id_operador', null=True, on_delete=django.db.models.deletion.RESTRICT, related_name='orden_compra', to='operadores.operador')),
            ],
            options={
                'db_table': '"dm_logistica"."orden_compra"',
            },
        ),
        migrations.CreateModel(
            name='DetalleCompra',
            fields=[
                ('id', models.AutoField(db_column='id_detalle_compra', primary_key=True, serialize=False)),
                ('id_modelo_producto', models.IntegerField(blank=True, null=True)),
                ('cantidad', models.BigIntegerField(blank=True, null=True)),
                ('precio_unitario', models.FloatField(blank=True, null=True)),
                ('glosa', models.CharField(blank=True, max_length=100, null=True)),
                ('descuento_unitario', models.FloatField(blank=True, null=True)),
                ('total_neto', models.FloatField(blank=True, null=True)),
                ('tipo_item', models.IntegerField(blank=True, null=True)),
                ('comprobado', models.IntegerField(default=0)),
                ('producto_ingresado', models.SmallIntegerField(default=0)),
                ('fecha_ingreso_producto', models.DateTimeField(blank=True, null=True)),
                ('id_operador_ingreso_producto', models.CharField(blank=True, max_length=50, null=True)),
                ('id_empresa', models.ForeignKey(db_column='id_empresa', null=True, on_delete=django.db.models.deletion.RESTRICT, to='coreempresas.empresa')),
                ('id_orden_compra', models.ForeignKey(db_column='id_orden_compra', on_delete=django.db.models.deletion.RESTRICT, related_name='detalles_compra', to='dm_logistica.ordencompra')),
            ],
            options={
                'db_table': '"dm_logistica"."detalle_compra"',
            },
        ),
        migrations.CreateModel(
            name='ProcesoComparacion',
            fields=[
                ('id', models.AutoField(db_column='id_proceso_comparacion', primary_key=True, serialize=False)),
                ('fecha_comparacion', models.DateTimeField(auto_now=True)),
                ('estado_comparacion', models.IntegerField(default=1)),
                ('observacion', models.TextField(blank=True, null=True)),
                ('id_empresa', models.ForeignKey(db_column='id_empresa', null=True, on_delete=django.db.models.deletion.RESTRICT, to='coreempresas.empresa')),
                ('id_operador', models.ForeignKey(blank=True, db_column='id_operador', null=True, on_delete=django.db.models.deletion.RESTRICT, related_name='proceso_comparacion', to='operadores.operador')),
                ('id_orden_compra', models.ForeignKey(db_column='id_orden_compra', on_delete=django.db.models.deletion.RESTRICT, related_name='proceso_comparacion', to='dm_logistica.ordencompra')),
            ],
            options={
                'db_table': '"dm_logistica"."proceso_comparacion"',
            },
        ),
        migrations.CreateModel(
            name='AjusteDetalleCompra',
            fields=[
                ('id', models.AutoField(db_column='id_ajuste_detalle_compra', primary_key=True, serialize=False)),
                ('cantidad', models.IntegerField(blank=True, null=True)),
                ('precio_unitario', models.FloatField()),
                ('glosa', models.CharField(max_length=100)),
                ('descuento', models.FloatField()),
                ('tipo_descuento', models.CharField(blank=True, max_length=10, null=True)),
                ('total_neto', models.FloatField()),
                ('id_empresa', models.ForeignKey(blank=True, db_column='id_empresa', null=True, on_delete=django.db.models.deletion.RESTRICT, to='coreempresas.empresa')),
                ('id_detalle_compra', models.ForeignKey(db_column='id_detalle_compra', on_delete=django.db.models.deletion.RESTRICT, related_name='ajuste_detalle_compra', to='dm_logistica.detallecompra')),
                ('id_orden_compra', models.ForeignKey(db_column='id_orden_compra', on_delete=django.db.models.deletion.RESTRICT, related_name='ajuste_detalle_compra', to='dm_logistica.ordencompra')),
                ('id_proceso_comparacion', models.ForeignKey(blank=True, db_column='id_proceso_comparacion', null=True, on_delete=django.db.models.deletion.RESTRICT, to='dm_logistica.procesocomparacion')),
            ],
            options={
                'db_table': '"dm_logistica"."ajuste_detalle_compra"',
            },
        ),
        migrations.CreateModel(
            name='ProductoBodega',
            fields=[
                ('id', models.AutoField(db_column='id_producto_bodega', primary_key=True, serialize=False)),
                ('serial', models.CharField(blank=True, max_length=100, null=True)),
                ('cantidad', models.FloatField(blank=True, null=True)),
                ('fecha_registro', models.DateTimeField(default=django.utils.timezone.now)),
                ('id_bodega', models.ForeignKey(db_column='id_bodega', on_delete=django.db.models.deletion.RESTRICT, related_name='productos_bodega', to='dm_logistica.bodega')),
                ('id_empresa', models.ForeignKey(blank=True, db_column='id_empresa', null=True, on_delete=django.db.models.deletion.RESTRICT, related_name='productos_bodega', to='coreempresas.empresa')),
                ('id_estado_producto', models.ForeignKey(blank=True, db_column='id_estado_producto', null=True, on_delete=django.db.models.deletion.RESTRICT, related_name='productos_bodega', to='dm_logistica.estadoproducto')),
                ('id_modelo_producto', models.ForeignKey(db_column='id_modelo_producto', on_delete=django.db.models.deletion.RESTRICT, related_name='productos_bodega', to='dm_logistica.modeloproducto')),
            ],
            options={
                'verbose_name': 'Producto en Bodega',
                'verbose_name_plural': 'Productos en Bodega',
                'db_table': '"dm_logistica"."producto_bodega"',
            },
        ),
        migrations.CreateModel(
            name='MovimientoBodega',
            fields=[
                ('id', models.AutoField(db_column='id_movimiento_bodega', primary_key=True, serialize=False)),
                ('id_ejecutivo_terreno', models.IntegerField(default=0)),
                ('estado', models.CharField(blank=True, max_length=15, null=True)),
                ('id_ejecutivo_recibe', models.IntegerField(default=0)),
                ('obs', models.CharField(blank=True, max_length=255, null=True)),
                ('id_empresa', models.ForeignKey(blank=True, db_column='id_empresa', null=True, on_delete=django.db.models.deletion.RESTRICT, to='coreempresas.empresa')),
                ('id_movimiento', models.ForeignKey(db_column='id_movimiento', on_delete=django.db.models.deletion.RESTRICT, related_name='movimientos_bodega', to='dm_logistica.movimiento')),
                ('id_producto_bodega', models.ForeignKey(blank=True, db_column='id_producto_bodega', null=True, on_delete=django.db.models.deletion.RESTRICT, related_name='movimientos_bodega', to='dm_logistica.productobodega')),
            ],
            options={
                'verbose_name': 'Movimiento Bodega',
                'verbose_name_plural': 'Movimientos Bodega',
                'db_table': '"dm_logistica"."movimiento_bodega"',
            },
        ),
        migrations.CreateModel(
            name='DetalleControlInventario',
            fields=[
                ('id', models.AutoField(db_column='id_detalle_control_inventario', primary_key=True, serialize=False)),
                ('serial', models.CharField(blank=True, max_length=100, null=True)),
                ('id_modelo_producto', models.IntegerField(blank=True, null=True)),
                ('estado_producto', models.CharField(blank=True, max_length=50, null=True)),
                ('cantidad_original', models.FloatField(blank=True, null=True)),
                ('cantidad_actual', models.FloatField(blank=True, null=True)),
                ('nombre_modelo', models.CharField(blank=True, max_length=100, null=True)),
                ('producto_seriado', models.SmallIntegerField(blank=True, null=True)),
                ('nombre_unidad_medida', models.CharField(blank=True, max_length=30, null=True)),
                ('nombre_serie', models.CharField(blank=True, max_length=45, null=True)),
                ('fecha', models.DateTimeField(blank=True, null=True)),
                ('fecha_verificacion', models.DateTimeField(blank=True, null=True)),
                ('id_operador_verificador', models.CharField(blank=True, max_length=50, null=True)),
                ('id_control_inventario', models.ForeignKey(db_column='id_control_inventario', null=True, on_delete=django.db.models.deletion.RESTRICT, related_name='detalles_inventario', to='dm_logistica.controlinventario')),
                ('id_empresa', models.ForeignKey(blank=True, db_column='id_empresa', null=True, on_delete=django.db.models.deletion.RESTRICT, to='coreempresas.empresa')),
                ('id_operador', models.ForeignKey(blank=True, db_column='id_operador', null=True, on_delete=django.db.models.deletion.RESTRICT, related_name='detalles_inventario', to='operadores.operador')),
                ('id_estado_detalle_control_inventario', models.ForeignKey(db_column='id_estado_detalle_control_inventario', null=True, on_delete=django.db.models.deletion.RESTRICT, related_name='detalles_inventario', to='dm_logistica.estadodetallecontrolinventario')),
                ('id_producto_bodega', models.ForeignKey(db_column='id_producto_bodega', null=True, on_delete=django.db.models.deletion.RESTRICT, related_name='detalles_inventario', to='dm_logistica.productobodega')),
            ],
            options={
                'verbose_name': 'Detalle de Control de Inventario',
                'verbose_name_plural': 'Detalles de Control de Inventario',
                'db_table': '"dm_logistica"."detalle_control_inventario"',
            },
        ),
        migrations.CreateModel(
            name='AtributoDetalle',
            fields=[
                ('id', models.AutoField(db_column='id_atributo_detalle', primary_key=True, serialize=False)),
                ('valor', models.CharField(blank=True, max_length=255, null=True)),
                ('id_atributo', models.ForeignKey(db_column='id_atributo', on_delete=django.db.models.deletion.RESTRICT, related_name='atributos_detalles', to='dm_logistica.atributo')),
                ('id_empresa', models.ForeignKey(blank=True, db_column='id_empresa', null=True, on_delete=django.db.models.deletion.RESTRICT, to='coreempresas.empresa')),
                ('id_producto_bodega', models.ForeignKey(db_column='id_producto_bodega', on_delete=django.db.models.deletion.RESTRICT, related_name='atributos_detalles', to='dm_logistica.productobodega')),
            ],
            options={
                'verbose_name': 'Detalle de Atributo',
                'verbose_name_plural': 'Detalles de Atributo',
                'db_table': '"dm_logistica"."atributo_detalle"',
            },
        ),
        migrations.CreateModel(
            name='Proveedor',
            fields=[
                ('id', models.AutoField(db_column='id_proveedor', primary_key=True, serialize=False)),
                ('descrip_giro', models.CharField(max_length=250)),
                ('rut', models.CharField(max_length=20)),
                ('nombre_rs', models.CharField(max_length=200)),
                ('nombre_fantasia', models.CharField(blank=True, max_length=200, null=True)),
                ('web', models.CharField(blank=True, max_length=50, null=True)),
                ('fecha_alta', models.DateTimeField(auto_now_add=True)),
                ('modalidad_pago', models.CharField(default='', max_length=50)),
                ('plazo_pago', models.IntegerField(blank=True, null=True)),
                ('estado', models.IntegerField(default=1)),
                ('direccion', models.CharField(blank=True, max_length=255, null=True)),
                ('id_comuna', models.IntegerField(blank=True, null=True)),
                ('id_region', models.IntegerField(blank=True, null=True)),
                ('proveedor_unico', models.SmallIntegerField(default=0)),
                ('id_empresa', models.ForeignKey(blank=True, db_column='id_empresa', null=True, on_delete=django.db.models.deletion.RESTRICT, to='coreempresas.empresa')),
                ('id_giro', models.ForeignKey(blank=True, db_column='id_giro', null=True, on_delete=django.db.models.deletion.RESTRICT, related_name='proveedores', to='dm_logistica.giro')),
            ],
            options={
                'verbose_name': 'Proveedor',
                'verbose_name_plural': 'Proveedores',
                'db_table': '"dm_logistica"."proveedor"',
            },
        ),
        migrations.AddField(
            model_name='ordencompra',
            name='id_proveedor',
            field=models.ForeignKey(blank=True, db_column='id_proveedor', null=True, on_delete=django.db.models.deletion.RESTRICT, related_name='orden_compra', to='dm_logistica.proveedor'),
        ),
        migrations.CreateModel(
            name='DetalleCotizacion',
            fields=[
                ('id', models.AutoField(db_column='id_detalle_cotizacion', primary_key=True, serialize=False)),
                ('fecha_registro', models.DateTimeField(default=django.utils.timezone.now)),
                ('cantidad', models.CharField(blank=True, max_length=50, null=True)),
                ('detalles', models.CharField(blank=True, max_length=255, null=True)),
                ('descuento_unitario', models.FloatField(blank=True, null=True)),
                ('precio_unitario', models.FloatField(blank=True, null=True)),
                ('id_modelo_producto', models.IntegerField(blank=True, null=True)),
                ('tipo_descuento', models.CharField(blank=True, max_length=5, null=True)),
                ('tipo_item', models.IntegerField(blank=True, null=True)),
                ('id_cotizacion', models.ForeignKey(db_column='id_cotizacion', on_delete=django.db.models.deletion.RESTRICT, related_name='detalle_cotizacion', to='dm_logistica.cotizacion')),
                ('id_empresa', models.ForeignKey(db_column='id_empresa', null=True, on_delete=django.db.models.deletion.RESTRICT, to='coreempresas.empresa')),
                ('id_proveedor', models.ForeignKey(db_column='id_proveedor', on_delete=django.db.models.deletion.RESTRICT, related_name='detalle_cotizacion', to='dm_logistica.proveedor')),
            ],
            options={
                'db_table': '"dm_logistica"."detalle_cotizacion"',
            },
        ),
        migrations.AddField(
            model_name='cotizacion',
            name='id_proveedor',
            field=models.ForeignKey(db_column='id_proveedor', on_delete=django.db.models.deletion.RESTRICT, to='dm_logistica.proveedor'),
        ),
        migrations.CreateModel(
            name='ProveedorContactos',
            fields=[
                ('id', models.AutoField(db_column='id_proveedor_contacto', primary_key=True, serialize=False)),
                ('relacion_contacto', models.CharField(blank=True, max_length=50, null=True)),
                ('telefono_contacto', models.CharField(blank=True, max_length=20, null=True)),
                ('mail_contacto', models.CharField(blank=True, max_length=50, null=True)),
                ('id_proveedor', models.ForeignKey(db_column='id_proveedor', on_delete=django.db.models.deletion.RESTRICT, to='dm_logistica.proveedor')),
            ],
            options={
                'db_table': '"dm_logistica"."proveedor_contactos"',
            },
        ),
        migrations.CreateModel(
            name='ProveedorTelefono',
            fields=[
                ('id', models.AutoField(db_column='id_proveedor_telefono', primary_key=True, serialize=False)),
                ('tipo', models.CharField(choices=[('movil', 'Móvil'), ('fijo', 'Fijo'), ('trabajo', 'Trabajo'), ('otro', 'Otro')], max_length=20)),
                ('es_principal', models.BooleanField(default=False)),
                ('numero', models.CharField(max_length=15)),
                ('id_proveedor', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, related_name='telefonosproveedor', to='dm_logistica.proveedor')),
            ],
            options={
                'db_table': '"dm_logistica"."proveedor_telefono"',
            },
        ),
        migrations.CreateModel(
            name='ServiciosBasicos',
            fields=[
                ('id', models.AutoField(db_column='id_servicio_basico', primary_key=True, serialize=False)),
                ('item_presupuesto', models.CharField(blank=True, max_length=6, null=True)),
                ('fecha_registro', models.DateTimeField(auto_now_add=True)),
                ('observacion', models.TextField(blank=True, null=True)),
                ('id_punto_venta', models.IntegerField(blank=True, null=True)),
                ('id_empresa', models.ForeignKey(blank=True, db_column='id_empresa', null=True, on_delete=django.db.models.deletion.RESTRICT, to='coreempresas.empresa')),
                ('id_operador', models.ForeignKey(blank=True, db_column='id_operador', null=True, on_delete=django.db.models.deletion.RESTRICT, related_name='servicios_basicos', to='operadores.operador')),
                ('id_proveedor', models.ForeignKey(db_column='id_proveedor', on_delete=django.db.models.deletion.RESTRICT, related_name='servicios_basicos', to='dm_logistica.proveedor')),
            ],
            options={
                'verbose_name': 'Servicio Básico',
                'verbose_name_plural': 'Servicios Básicos',
                'db_table': '"dm_logistica"."servicios_basicos"',
            },
        ),
        migrations.CreateModel(
            name='ServiciosCajaChica',
            fields=[
                ('id', models.AutoField(db_column='id_servicio_caja_chica', primary_key=True, serialize=False)),
                ('monto', models.FloatField(blank=True, null=True)),
                ('id_operador_autoriza', models.CharField(max_length=50)),
                ('fecha_registro', models.DateTimeField(auto_now_add=True)),
                ('fecha_autoriza', models.DateField(blank=True, null=True)),
                ('nota', models.TextField(blank=True, null=True)),
                ('estado', models.CharField(blank=True, max_length=50, null=True)),
                ('motivo_rechazo', models.TextField(blank=True, null=True)),
                ('archivo', models.CharField(blank=True, max_length=255, null=True)),
                ('id_parque', models.IntegerField(blank=True, null=True)),
                ('id_punto_venta', models.IntegerField(blank=True, null=True)),
                ('id_solicitante', models.CharField(blank=True, max_length=50, null=True)),
                ('id_empresa', models.ForeignKey(blank=True, db_column='id_empresa', null=True, on_delete=django.db.models.deletion.RESTRICT, to='coreempresas.empresa')),
                ('id_operador', models.ForeignKey(db_column='id_operador', on_delete=django.db.models.deletion.RESTRICT, related_name='servicios_caja_chica_operador', to='operadores.operador')),
            ],
            options={
                'verbose_name': 'Servicio Caja Chica',
                'verbose_name_plural': 'Servicios Caja Chica',
                'db_table': '"dm_logistica"."servicios_caja_chica"',
            },
        ),
        migrations.CreateModel(
            name='ServiciosCajaChicaDetalle',
            fields=[
                ('id', models.AutoField(db_column='id_servicio_caja_chica_detalle', primary_key=True, serialize=False)),
                ('tipo_doc', models.CharField(blank=True, max_length=50, null=True)),
                ('fecha_emision', models.DateTimeField(blank=True, null=True)),
                ('razon_social', models.CharField(blank=True, max_length=50, null=True)),
                ('folio_dt', models.CharField(blank=True, max_length=50, null=True)),
                ('monto', models.FloatField(blank=True, null=True)),
                ('detalle', models.CharField(blank=True, max_length=255, null=True)),
                ('item_presupuesto', models.CharField(blank=True, max_length=10, null=True)),
                ('archivo', models.CharField(blank=True, max_length=255, null=True)),
                ('fecha_registro', models.DateTimeField(auto_now_add=True)),
                ('id_empresa', models.ForeignKey(blank=True, db_column='id_empresa', null=True, on_delete=django.db.models.deletion.RESTRICT, to='coreempresas.empresa')),
                ('id_operador', models.ForeignKey(db_column='id_operador', on_delete=django.db.models.deletion.RESTRICT, related_name='servicios_caja_chica_detalle', to='operadores.operador')),
                ('id_servicio_caja_chica', models.ForeignKey(db_column='id_servicio_caja_chica', on_delete=django.db.models.deletion.RESTRICT, related_name='detalles_caja_chica', to='dm_logistica.servicioscajachica')),
            ],
            options={
                'verbose_name': 'Detalle de Servicio Caja Chica',
                'verbose_name_plural': 'Detalles de Servicio Caja Chica',
                'db_table': '"dm_logistica"."servicios_caja_chica_detalle"',
            },
        ),
        migrations.CreateModel(
            name='SolicitudCompra',
            fields=[
                ('id', models.AutoField(db_column='id_solicitud_compra', primary_key=True, serialize=False)),
                ('id_aprobador', models.CharField(default='', max_length=50)),
                ('fecha_registro', models.DateTimeField(auto_now_add=True)),
                ('descripcion', models.TextField(blank=True, null=True)),
                ('fecha_solicitud_compra', models.DateTimeField(blank=True, null=True)),
                ('titulo', models.CharField(blank=True, max_length=100, null=True)),
                ('ruta_file', models.CharField(blank=True, max_length=255, null=True)),
                ('cod_presupuesto', models.CharField(blank=True, max_length=10, null=True)),
                ('id_punto_venta', models.IntegerField(blank=True, null=True)),
                ('operador_rechazo', models.CharField(blank=True, max_length=50, null=True)),
                ('fecha_rechazo', models.DateTimeField(blank=True, null=True)),
                ('motivo_rechazo', models.TextField(blank=True, null=True)),
                ('id_requerimiento', models.IntegerField(blank=True, null=True)),
                ('id_empresa', models.ForeignKey(db_column='id_empresa', null=True, on_delete=django.db.models.deletion.RESTRICT, to='coreempresas.empresa')),
                ('id_estado_solicitud_compra', models.ForeignKey(db_column='id_estado_solicitud_compra', on_delete=django.db.models.deletion.RESTRICT, related_name='solicitudes', to='dm_logistica.estadosolicitudcompra')),
                ('id_operador', models.ForeignKey(db_column='id_operador', on_delete=django.db.models.deletion.RESTRICT, related_name='solicitudes', to='operadores.operador')),
                ('id_tipo_solicitud', models.ForeignKey(db_column='id_tipo_solicitud', on_delete=django.db.models.deletion.RESTRICT, related_name='solicitudes', to='dm_logistica.tiposolicitud')),
            ],
            options={
                'verbose_name': 'Solicitud de Compra',
                'verbose_name_plural': 'Solicitudes de Compra',
                'db_table': '"dm_logistica"."solicitud_compra"',
            },
        ),
        migrations.AddField(
            model_name='ordencompra',
            name='id_solicitud_compra',
            field=models.ForeignKey(db_column='id_solicitud_compra', on_delete=django.db.models.deletion.RESTRICT, related_name='orden_compra', to='dm_logistica.solicitudcompra'),
        ),
        migrations.AddField(
            model_name='cotizacion',
            name='id_solicitud_compra',
            field=models.ForeignKey(blank=True, db_column='id_solicitud_compra', null=True, on_delete=django.db.models.deletion.RESTRICT, to='dm_logistica.solicitudcompra'),
        ),
        migrations.CreateModel(
            name='TipoMarcaProducto',
            fields=[
                ('id', models.AutoField(db_column='id_tipo_marca_producto', primary_key=True, serialize=False)),
                ('id_empresa', models.ForeignKey(blank=True, db_column='id_empresa', null=True, on_delete=django.db.models.deletion.RESTRICT, to='coreempresas.empresa')),
                ('id_marca_producto', models.ForeignKey(db_column='id_marca_producto', on_delete=django.db.models.deletion.RESTRICT, related_name='tipos_marca_productos', to='dm_logistica.marcaproducto')),
            ],
            options={
                'verbose_name': 'Tipo Marca Producto',
                'verbose_name_plural': 'Tipos Marca Producto',
                'db_table': '"dm_logistica"."tipo_marca_producto"',
            },
        ),
        migrations.AddField(
            model_name='modeloproducto',
            name='id_tipo_marca_producto',
            field=models.ForeignKey(db_column='id_tipo_marca_producto', on_delete=django.db.models.deletion.RESTRICT, related_name='modelos', to='dm_logistica.tipomarcaproducto'),
        ),
        migrations.CreateModel(
            name='TipoProducto',
            fields=[
                ('id', models.AutoField(db_column='id_tipo_producto', primary_key=True, serialize=False)),
                ('codigo_tipo_producto', models.CharField(blank=True, max_length=255, null=True)),
                ('tipo_producto', models.CharField(max_length=100)),
                ('estado', models.SmallIntegerField(default=1)),
                ('id_empresa', models.ForeignKey(blank=True, db_column='id_empresa', null=True, on_delete=django.db.models.deletion.RESTRICT, to='coreempresas.empresa')),
            ],
            options={
                'verbose_name': 'Tipo de Producto',
                'verbose_name_plural': 'Tipos de Producto',
                'db_table': '"dm_logistica"."tipo_producto"',
            },
        ),
        migrations.AddField(
            model_name='tipomarcaproducto',
            name='id_tipo_producto',
            field=models.ForeignKey(db_column='id_tipo_producto', on_delete=django.db.models.deletion.RESTRICT, related_name='tipos_marca_productos', to='dm_logistica.tipoproducto'),
        ),
        migrations.AddField(
            model_name='modeloproducto',
            name='id_unidad_medida',
            field=models.ForeignKey(db_column='id_unidad_medida', on_delete=django.db.models.deletion.RESTRICT, related_name='modelos', to='dm_logistica.unidadmedida'),
        ),
        migrations.AddIndex(
            model_name='atributo',
            index=models.Index(fields=['id_modelo_producto'], name='fk_atributo_modelo_producto'),
        ),
        migrations.AddIndex(
            model_name='atributo',
            index=models.Index(fields=['id_empresa'], name='fk_id_empresa_atributo'),
        ),
        migrations.AddIndex(
            model_name='bodegastock',
            index=models.Index(fields=['id_bodega'], name='fk_bodg_stbdga'),
        ),
        migrations.AddIndex(
            model_name='bodegastock',
            index=models.Index(fields=['id_modelo_producto'], name='fk_bodg_st_modprod'),
        ),
        migrations.AddIndex(
            model_name='bodegastock',
            index=models.Index(fields=['id_empresa'], name='fk_id_emp_bodg_stk'),
        ),
        migrations.AddIndex(
            model_name='bodegastock',
            index=models.Index(fields=['id_grupo'], name='fk_id_grbdega_stock'),
        ),
        migrations.AddConstraint(
            model_name='bodegastock',
            constraint=models.UniqueConstraint(
                # ⚠️  CORREGIDO: quitar 'id_bodega_stock'
                fields=('id_modelo_producto', 'id_bodega'),
                name='bodega_stock_unique_compound',
            ),
        ),
        migrations.AddIndex(
            model_name='bodega',
            index=models.Index(fields=['estado_bodega'], name='fk_bodg_ebg'),
        ),
        migrations.AddIndex(
            model_name='bodega',
            index=models.Index(fields=['id_bodega_tipo'], name='idx_bodg_tbdg'),
        ),
        migrations.AddIndex(
            model_name='bodega',
            index=models.Index(fields=['id_empresa'], name='fk_id_emp_bodg'),
        ),
        migrations.AddIndex(
            model_name='giro',
            index=models.Index(fields=['id'], name='fk_giro_proveedor1_idx'),
        ),
        migrations.AddIndex(
            model_name='giro',
            index=models.Index(fields=['id_empresa'], name='fk_id_empresa_giro'),
        ),
        migrations.AlterUniqueTogether(
            name='giro',
            unique_together={('id', 'descrip_giro')},
        ),
        migrations.AddIndex(
            model_name='marcaproducto',
            index=models.Index(fields=['id_empresa'], name='fk_id_empresa_marca_producto'),
        ),
        migrations.AddIndex(
            model_name='modeloproductovalores',
            index=models.Index(fields=['id_modelo_producto'], name='idx_id_modelo_producto'),
        ),
        migrations.AddIndex(
            model_name='modeloproductovalores',
            index=models.Index(fields=['id_empresa'], name='idx_id_empresa'),
        ),
        migrations.AddIndex(
            model_name='movimiento',
            index=models.Index(fields=['id_bodega'], name='fk_movi_bdga'),
        ),
        migrations.AddIndex(
            model_name='movimiento',
            index=models.Index(fields=['tipo_movimiento'], name='idx_movi_tp_mov'),
        ),
        migrations.AddIndex(
            model_name='movimiento',
            index=models.Index(fields=['id_empresa'], name='fk_id_emp_movi'),
        ),
        migrations.AddIndex(
            model_name='movimiento',
            index=models.Index(fields=['id_receptor'], name='id_receptor'),
        ),
        migrations.AddIndex(
            model_name='movimiento',
            index=models.Index(fields=['fecha_registro'], name='fecha_registro'),
        ),
        migrations.AddIndex(
            model_name='detallecompra',
            index=models.Index(fields=['id_orden_compra'], name='fk_det_comp_orc'),
        ),
        migrations.AddIndex(
            model_name='detallecompra',
            index=models.Index(fields=['id_modelo_producto'], name='det_comp_modp'),
        ),
        migrations.AddIndex(
            model_name='detallecompra',
            index=models.Index(fields=['id_empresa'], name='fk_id_emp_det_comp'),
        ),
        migrations.AddIndex(
            model_name='procesocomparacion',
            index=models.Index(fields=['id_orden_compra'], name='fk_proc_comp_ord_comp'),
        ),
        migrations.AddIndex(
            model_name='procesocomparacion',
            index=models.Index(fields=['id_operador'], name='fk_proc_comp_op'),
        ),
        migrations.AddIndex(
            model_name='procesocomparacion',
            index=models.Index(fields=['id_empresa'], name='fk_id_emp_proc_comp'),
        ),
        migrations.AddIndex(
            model_name='ajustedetallecompra',
            index=models.Index(fields=['id_detalle_compra'], name='fk_aj_det_compdc'),
        ),
        migrations.AddIndex(
            model_name='ajustedetallecompra',
            index=models.Index(fields=['id_empresa'], name='fk_id_empresa_ajdcomp'),
        ),
        migrations.AddIndex(
            model_name='ajustedetallecompra',
            index=models.Index(fields=['id_proceso_comparacion'], name='fk_id_pc_ajdcomp'),
        ),
        migrations.AddIndex(
            model_name='ajustedetallecompra',
            index=models.Index(fields=['id_orden_compra'], name='fk_id_oc_ajdcomp'),
        ),
        migrations.AddIndex(
            model_name='productobodega',
            index=models.Index(fields=['id_bodega'], name='fk_prod_bod_bod'),
        ),
        migrations.AddIndex(
            model_name='productobodega',
            index=models.Index(fields=['id_modelo_producto'], name='fk_prod_bod_modprod'),
        ),
        migrations.AddIndex(
            model_name='productobodega',
            index=models.Index(fields=['id_empresa'], name='fk_id_emp_prod_bod'),
        ),
        migrations.AddIndex(
            model_name='productobodega',
            index=models.Index(fields=['id_estado_producto'], name='fk_id_est_prod_bod'),
        ),
        migrations.AddIndex(
            model_name='movimientobodega',
            index=models.Index(fields=['id_movimiento'], name='fk_movi_bodga_movi'),
        ),
        migrations.AddIndex(
            model_name='movimientobodega',
            index=models.Index(fields=['id_producto_bodega'], name='fk_movi_bdg_prod_bodga'),
        ),
        migrations.AddIndex(
            model_name='movimientobodega',
            index=models.Index(fields=['id_empresa'], name='fk_id_emp_mov_bodega'),
        ),
        migrations.AddIndex(
            model_name='detallecontrolinventario',
            index=models.Index(fields=['id_control_inventario'], name='fk_cot_invent_dci'),
        ),
        migrations.AddIndex(
            model_name='detallecontrolinventario',
            index=models.Index(fields=['id_producto_bodega'], name='fk_id_prod_bdg_dci'),
        ),
        migrations.AddIndex(
            model_name='detallecontrolinventario',
            index=models.Index(fields=['id_estado_detalle_control_inventario'], name='fk_id_est_det_cont_dci'),
        ),
        migrations.AddIndex(
            model_name='detallecontrolinventario',
            index=models.Index(fields=['id_empresa'], name='fk_id_emp_cont_invent_dci'),
        ),
        migrations.AddIndex(
            model_name='detallecontrolinventario',
            index=models.Index(fields=['id_operador'], name='fk_id_op_cont_invent_dci'),
        ),
        migrations.AddIndex(
            model_name='detallecontrolinventario',
            index=models.Index(fields=['id_modelo_producto'], name='fk_id_mod_prod_dci'),
        ),
        migrations.AddIndex(
            model_name='atributodetalle',
            index=models.Index(fields=['id_atributo'], name='fk_at_d_at'),
        ),
        migrations.AddIndex(
            model_name='atributodetalle',
            index=models.Index(fields=['valor'], name='idx_valor'),
        ),
        migrations.AddIndex(
            model_name='atributodetalle',
            index=models.Index(fields=['id_empresa'], name='fk_id_emp_at_det'),
        ),
        migrations.AddIndex(
            model_name='atributodetalle',
            index=models.Index(fields=['id_producto_bodega'], name='fk_id_p_bod_atd'),
        ),
        migrations.AddIndex(
            model_name='proveedor',
            index=models.Index(fields=['id_empresa'], name='fk_id_empresa_proveedor'),
        ),
        migrations.AddIndex(
            model_name='proveedor',
            index=models.Index(fields=['id_giro'], name='fk_id_giro_proveedor'),
        ),
        migrations.AddIndex(
            model_name='detallecotizacion',
            index=models.Index(fields=['id_modelo_producto'], name='mod_prod_det_cot'),
        ),
        migrations.AddIndex(
            model_name='detallecotizacion',
            index=models.Index(fields=['id_cotizacion'], name='fk_cot_det_cot'),
        ),
        migrations.AddIndex(
            model_name='detallecotizacion',
            index=models.Index(fields=['id_empresa'], name='fk_id_emp_det_cot'),
        ),
        migrations.AddIndex(
            model_name='detallecotizacion',
            index=models.Index(fields=['id_proveedor'], name='fk_id_proveedor_det_cot'),
        ),
        migrations.AddIndex(
            model_name='proveedorcontactos',
            index=models.Index(fields=['id_proveedor'], name='fk_provcon_prov'),
        ),
        migrations.AddIndex(
            model_name='proveedorcontactos',
            index=models.Index(fields=['id_proveedor', 'relacion_contacto'], name='proveedor_c_id_prov_4314f0_idx'),
        ),
        migrations.AddIndex(
            model_name='proveedortelefono',
            index=models.Index(fields=['es_principal'], name='fk_esprvtel'),
        ),
        migrations.AddIndex(
            model_name='proveedortelefono',
            index=models.Index(fields=['tipo'], name='fk_tipo_proveedor_telefono'),
        ),
        migrations.AddIndex(
            model_name='serviciosbasicos',
            index=models.Index(fields=['id_empresa'], name='fk_emp_servbas'),
        ),
        migrations.AddIndex(
            model_name='serviciosbasicos',
            index=models.Index(fields=['id_operador'], name='fk_op_servbas'),
        ),
        migrations.AddIndex(
            model_name='serviciosbasicos',
            index=models.Index(fields=['id_proveedor'], name='fk_prov_servbas'),
        ),
        migrations.AddIndex(
            model_name='serviciosbasicos',
            index=models.Index(fields=['id_punto_venta'], name='fk_pv_servbas'),
        ),
        migrations.AddIndex(
            model_name='servicioscajachica',
            index=models.Index(fields=['id_empresa'], name='fk_id_empresa'),
        ),
        migrations.AddIndex(
            model_name='servicioscajachica',
            index=models.Index(fields=['estado'], name='estado'),
        ),
        migrations.AddIndex(
            model_name='servicioscajachica',
            index=models.Index(fields=['id_punto_venta'], name='id_punto_venta'),
        ),
        migrations.AddIndex(
            model_name='servicioscajachica',
            index=models.Index(fields=['fecha_autoriza'], name='fecha_autoriza'),
        ),
        migrations.AddIndex(
            model_name='servicioscajachica',
            index=models.Index(fields=['id_operador'], name='fk_op_servcaja'),
        ),
        migrations.AddIndex(
            model_name='servicioscajachicadetalle',
            index=models.Index(fields=['id_servicio_caja_chica'], name='fk_servcajadet'),
        ),
        migrations.AddIndex(
            model_name='servicioscajachicadetalle',
            index=models.Index(fields=['id_empresa'], name='fk_emp_scchdt'),
        ),
        migrations.AddIndex(
            model_name='servicioscajachicadetalle',
            index=models.Index(fields=['id_operador'], name='fk_op_scchdt'),
        ),
        migrations.AddIndex(
            model_name='ordencompra',
            index=models.Index(fields=['id_operador'], name='fk_orden_comp_op'),
        ),
        migrations.AddIndex(
            model_name='ordencompra',
            index=models.Index(fields=['id_solicitud_compra'], name='fk_orden_compra_sol_com'),
        ),
        migrations.AddIndex(
            model_name='ordencompra',
            index=models.Index(fields=['id_cotizacion'], name='fk_orden_comp_cot'),
        ),
        migrations.AddIndex(
            model_name='ordencompra',
            index=models.Index(fields=['id_estado_orden_compra'], name='fk_orden_comp_est_or_comp'),
        ),
        migrations.AddIndex(
            model_name='ordencompra',
            index=models.Index(fields=['id_empresa'], name='fk_id_emp_ord_comp'),
        ),
        migrations.AddIndex(
            model_name='ordencompra',
            index=models.Index(fields=['id_proveedor'], name='fk_id_prov_ord_comp'),
        ),
        migrations.AddIndex(
            model_name='ordencompra',
            index=models.Index(fields=['id_solicitante'], name='id_solicitante'),
        ),
        migrations.AddIndex(
            model_name='ordencompra',
            index=models.Index(fields=['folio'], name='folio'),
        ),
        migrations.AddIndex(
            model_name='cotizacion',
            index=models.Index(fields=['id_proveedor'], name='fk_cot_proveedor1_idx'),
        ),
        migrations.AddIndex(
            model_name='cotizacion',
            index=models.Index(fields=['id_empresa'], name='fk_id_emp_cot'),
        ),
        migrations.AddIndex(
            model_name='cotizacion',
            index=models.Index(fields=['id_solicitud_compra'], name='fk_id_sc_cot'),
        ),
        migrations.AddIndex(
            model_name='cotizacion',
            index=models.Index(fields=['id_operador'], name='fk_id_op_cot'),
        ),
        migrations.AddIndex(
            model_name='controlinventario',
            index=models.Index(fields=['id_estado_control_inventario'], name='fk_id_estcinv'),
        ),
        migrations.AddIndex(
            model_name='controlinventario',
            index=models.Index(fields=['id_tipo_control_inventario'], name='fk_id_tipo_cont_inv'),
        ),
        migrations.AddIndex(
            model_name='controlinventario',
            index=models.Index(fields=['id_bodega'], name='fk_id_bodega'),
        ),
        migrations.AddIndex(
            model_name='controlinventario',
            index=models.Index(fields=['id_empresa'], name='fk_id_emp_cont_invt'),
        ),
        migrations.AddIndex(
            model_name='controlinventario',
            index=models.Index(fields=['id_operador'], name='fk_id_op_cont_invt'),
        ),
        migrations.AddIndex(
            model_name='tipoproducto',
            index=models.Index(fields=['tipo_producto'], name='idx_tipo_producto'),
        ),
        migrations.AddIndex(
            model_name='tipoproducto',
            index=models.Index(fields=['id_empresa'], name='fk_id_empresa_tipo_producto'),
        ),
        migrations.AddIndex(
            model_name='tipomarcaproducto',
            index=models.Index(fields=['id_marca_producto'], name='fk_tmp_marc'),
        ),
        migrations.AddIndex(
            model_name='tipomarcaproducto',
            index=models.Index(fields=['id_empresa'], name='fk_tmp_emp'),
        ),
        migrations.AlterUniqueTogether(
            name='tipomarcaproducto',
            unique_together={('id', 'id_marca_producto')},
        ),
        migrations.AddIndex(
            model_name='solicitudcompra',
            index=models.Index(fields=['id_operador'], name='fk_solic_comp_op'),
        ),
        migrations.AddIndex(
            model_name='solicitudcompra',
            index=models.Index(fields=['id_empresa'], name='fk_solic_comp_emp'),
        ),
        migrations.AddIndex(
            model_name='solicitudcompra',
            index=models.Index(fields=['id_estado_solicitud_compra'], name='fk_solic_comp_esomp'),
        ),
        migrations.AddIndex(
            model_name='solicitudcompra',
            index=models.Index(fields=['id_tipo_solicitud'], name='id_tip_sol_sc'),
        ),
        migrations.AddIndex(
            model_name='solicitudcompra',
            index=models.Index(fields=['cod_presupuesto'], name='cod_pres_sc'),
        ),
        migrations.AddIndex(
            model_name='solicitudcompra',
            index=models.Index(fields=['id_punto_venta'], name='id_punto_venta_sc'),
        ),
        migrations.AddIndex(
            model_name='solicitudcompra',
            index=models.Index(fields=['id_requerimiento'], name='id_requerimiento_sc'),
        ),
        migrations.AddIndex(
            model_name='modeloproducto',
            index=models.Index(fields=['id_identificador_serie'], name='fk_modprod_idser'),
        ),
        migrations.AddIndex(
            model_name='modeloproducto',
            index=models.Index(fields=['id_tipo_marca_producto'], name='fk_modprod_tpmar'),
        ),
        migrations.AddIndex(
            model_name='modeloproducto',
            index=models.Index(fields=['numero_parte'], name='idx_numero_parte'),
        ),
        migrations.AddIndex(
            model_name='modeloproducto',
            index=models.Index(fields=['id_unidad_medida'], name='fk_modprod_unimed'),
        ),
        migrations.AddIndex(
            model_name='modeloproducto',
            index=models.Index(fields=['nombre_modelo'], name='idx_nombre_modelo'),
        ),
        migrations.AddIndex(
            model_name='modeloproducto',
            index=models.Index(fields=['id_empresa'], name='fk_id_empresa_modelo_producto'),
        ),
        migrations.AddIndex(
            model_name='modeloproducto',
            index=models.Index(fields=['sku'], name='sku_idx'),
        ),
        migrations.AddIndex(
            model_name='modeloproducto',
            index=models.Index(fields=['sku_codigo'], name='sku_codigo_idx'),
        ),
    ]
